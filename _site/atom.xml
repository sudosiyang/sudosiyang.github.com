<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>苏思洋的博客</title>
 <link href="http://ssy.me/atom.xml" rel="self"/>
 <link href="http://ssy.me"/>
 <updated>2014-01-22T09:38:44+08:00</updated>
 <id>http://ssy.me</id>
 <author>
   <name>susu</name>
   <email>744276721@qq.com</email>
 </author>

 
 <entry>
   <title>JavaScript 的HTML转义方法</title>
   <link href="http://ssy.me/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2014/01/21/html-zhuanyi"/>
   <updated>2014-01-21T00:00:00+08:00</updated>
   <id>http://ssy.me/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2014/01/21/html-zhuanyi</id>
   <content type="html">&lt;h1&gt;&lt;/h1&gt;

&lt;p&gt;此方法用来将用户输入内容中的尖括号、引号等进行转义&lt;/p&gt;

&lt;p&gt;正常版，可在nodejs中使用&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;html_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&amp;amp;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&amp;lt;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;amp;lt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&amp;gt;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ /g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;amp;nbsp;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/\&amp;#39;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/\&amp;quot;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/\n/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;br&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;html_decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&amp;amp;gt;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;amp;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&amp;amp;lt;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&amp;amp;gt;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&amp;amp;nbsp;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&amp;amp;#39;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;\&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&amp;amp;quot;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;\&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&amp;lt;br&amp;gt;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;巧妙版：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;htmlEncode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;div&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createTextNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;htmlDecode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;div&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>IE下iframe跨域session丢失问题和解决</title>
   <link href="http://ssy.me/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2014/01/09/IE-iframe-P3P"/>
   <updated>2014-01-09T00:00:00+08:00</updated>
   <id>http://ssy.me/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2014/01/09/IE-iframe-P3P</id>
   <content type="html">&lt;h1&gt;&lt;/h1&gt;

&lt;p&gt;今天碰到一个问题，就是在IE下，使用iFrame嵌入页面时，该页面的会话级别的cookie无法写入，导致服务端始终无法获取JSESSIONID，每次都是产生一个新的，使得Session无法使用。&lt;/p&gt;

&lt;p&gt;通过网上大量的搜索发现原来IE的iframe有特殊之处, 默认情况下, IE如果发现iframe的域和父页面的域不同, 则会禁止iframe页面写入Cookie(Session在默认情况下就是通过Cookie保存一个SessionID的)。 &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2014-1-9/1.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;如果将IE设置-&amp;gt;隐私的级别调至最低, 也就是接受任何Cookie, 那么是运行正常的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2014-1-9/2.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;如果你按照上面操作并且你的问题解决了说明确定是IE这个特性导致的。
接下来我们将解决这问题。&lt;/p&gt;

&lt;p&gt;问题怎么出现的呢也许你会好奇。&lt;/p&gt;

&lt;p&gt;原因是&lt;strong&gt;&lt;em&gt;P3P&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;从本质上来说，P3P 策略是由一系列多选项问题的答案组成的，因此，它并不总像一个人类可读的隐私策略那样包含许多信息细节（例如，用英语或者其他某种口语语言写成的策略是用来让人阅读的,而不是让计算机识别的）。P3P策略的标准格式使它便于自动处理。同 样 ，P3P规范也包含有用于请求和传输P3P策略的协议.P3P协议所基于的HTTP协议与 Web 浏览器用来与 Web服务器进行通信的 HTTP 协议相同。如图 1-1 所示，P3P 的用户代理使用标准的 HTTP 请求从 Web 站点上一个众所周知的地方获取 P3P 策略引用文件，并发送给发出请求的用户。这个策略引用文件指出了Web站点上各个部分所应用的P3P策略文件的位置。整个站点有可能只应用了一种策略，也可能是网站的不同部分分别应用了几种策略。这样用户代理就可以根据用户的选择来获取合适的策略，将其解析出来并采取相应的动作&lt;/p&gt;

&lt;p&gt;P3P 也允许站点在其他位置放置策略引用文件。在这些情况下，站点在声明策略引用文件的位置时，必须使用一个特定的 HTTP 报头，或者在应用了 P3P 策略的html 文件内嵌入一个 link 标 记 。
不论在何时设置cookie都可以用特定的HTTP报头来传送一个可选的 P3P 简洁策略.简洁策略是完整 P3P 策略的一个短小摘要，仅描述了与cooki e 相关的数据处理方式，并且不需要P3P 策略的完整的表达性能。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;如何使Web站点支持P3P:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;从技术角度看，使 Web站点支持 P3P 是一个很容易的过程。但是，它要求网络运营商在审视数据处理方式时比以前更加仔细，并要求他们协调域内各个主机上的策略和处理方式。以下是如何使站点支持P3P 技术的具体步骤。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;创建一个隐私策略。&lt;/li&gt;
&lt;li&gt;分析 cookie 的使用情况以及您的站点上的第三方内容。&lt;/li&gt;
&lt;li&gt;确定要对整个站点应用一个P3P策略还是对站点的不同部分应用不同的P3P 策略。&lt;/li&gt;
&lt;li&gt;为站点创建一个或几个 P3P 策略。&lt;/li&gt;
&lt;li&gt;为站点创建一个策略引用文件。&lt;/li&gt;
&lt;li&gt;为 P3P 配置服务器。&lt;/li&gt;
&lt;li&gt;测试站点，以确定它确实支持 P3P。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;大多数支持P3P的Web站点会在每台服务器上放置一个P3P策略引用文件，同时它还会在中央服务器上放置一个或多个P3P策略。这些站点也会将自己的服务器配置为用户在设置 cookie 时发送 P3P 的简洁策略。P3P 策略包括以下信息：&lt;/p&gt;

&lt;p&gt;● 如何与拥有该站点的公司、组织或个人进行联系的信息。&lt;/p&gt;

&lt;p&gt;● 用户是否可以查找该站点的数据库中保存了自己的哪些个人信息。&lt;/p&gt;

&lt;p&gt;● 如何解决与站点之间有关隐私的纠纷（如客户服务台、隐私封印以及与隐私相关的法律等）。&lt;/p&gt;

&lt;p&gt;● 所收集数据的种类。&lt;/p&gt;

&lt;p&gt;● 所收集数据的使用方式，以及用户是否能选择接受或拒绝这些用途。&lt;/p&gt;

&lt;p&gt;● 信息是否会被共享以及何时被共享，用户是否有选择的权力。&lt;/p&gt;

&lt;p&gt;● 对所收集的用户信息进行定期清除的策略。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTTP Response Header :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;参考资源:&lt;a href=&quot;http://www.w3.org/2002/04/P3Pv1-header.html&quot;&gt;http://www.w3.org/2002/04/P3Pv1-header.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Compact Policies(简洁策略)&lt;/p&gt;

&lt;p&gt;简洁策略,本质上就是P3P策略的一个摘要. 他们的作用是,使用户代理,可以快速敏捷的获取到站点的P3P策略信息,所以是对性能有益的. &lt;/p&gt;

&lt;p&gt;我们常用的简洁策略的 P3P头为 -   P3P : CP=CAO PSA OUR&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;总结下浏览器支持情况：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2014-1-9/3.png&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;既然知道这么多了，我们来解决问题吧。
以PHP为例子
解决这些问题，归根结底只需要一条语句设置一下header，在PHP中，如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;php language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;header(&amp;#39;P3P: CP=&amp;quot;CURa ADMa DEVa PSAo PSDo OUR BUS UNI PUR INT DEM STA PRE COM NAV OTC NOI DSP COR&amp;quot;&amp;#39;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;PS:如果是使用session的话，这条语句请使用在session_start();之前，如果是使用cookie，请在setcookie之前设置header。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;当然，比较容易想到。另外的解决办法就是在URL中加入sessionid。对此就不举例了。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>JavaScript 跨域访问的问题和解决过程</title>
   <link href="http://ssy.me/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2013/11/26/cross-domian"/>
   <updated>2013-11-26T00:00:00+08:00</updated>
   <id>http://ssy.me/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2013/11/26/cross-domian</id>
   <content type="html">&lt;h1&gt;&lt;/h1&gt;

&lt;p&gt;分享一下最近用jQuery跨域请求的经历，希望能给大家一些关于这个方案的概念和资料。&lt;/p&gt;

&lt;p&gt;1.代码很简单&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://www.tetequ.com&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;success&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;error&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;always&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;complete&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上去运行一下......
当然不能用!什么都还没做呢，就想做跨域访问这么危险的事情,嘿嘿！&lt;/p&gt;

&lt;p&gt;下面是Chrome给出的错误提示 &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-12-25/1.png&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;2.在服务器端做点手脚(php为例)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;php language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;header(&amp;quot;Access-Control-Allow-Origin:*&amp;quot;);// 可以设置为详细的地址&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3.好了现在Chrome中的Get已经可以运行了。&lt;/p&gt;

&lt;p&gt;4.还有问题。。。。忽然发现在IE8和IE9中无法运行，而在其他的浏览器中都正常（opera未测试，google说这个浏览器也有问题。不过这东西比较小众）
使用Fiddler发现 这个动作根本没有被提交到服务器端。。。。
这是多么痛的领悟啊。（IE 为什么每次你都这么另类！，jQuery你为什么不兼容ie8和ie9的跨域提交功能。。加点代码很麻烦么！！！）&lt;/p&gt;

&lt;p&gt;最后用各种方法知道了---&lt;/p&gt;

&lt;p&gt;IE8以上的版本跨域提交需要使用XDomainRequest 对象。。。。关于 XDomainRequest 请在这里查看详细，&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/cc288060(VS.85).aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/cc288060(VS.85).aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;解决代码如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xdr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XDomainRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;xdr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parseJSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xdr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;responseText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parseJSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//success&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;xdr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onerror&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//error&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;xdr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;xdr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;5.问题算是解决了get都可以了。还有问题IE11你又出来干嘛了。。。你居然没有XDomainRequest。多么坑爹啊。还好IE11可以用标准的提交跨域。只是判别的时候有点蛋疼。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userAgent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/(msie\s|trident.*rv:)([\w.]+)/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个能否判断IE11自己试着办哈。。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;本人水平有限，如果有所遗漏和谬误，请各位朋友指正，希望一起讨论学习和进步&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>当下网页设计趋势</title>
   <link href="http://ssy.me/%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1/2013/11/11/qushi"/>
   <updated>2013-11-11T00:00:00+08:00</updated>
   <id>http://ssy.me/%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1/2013/11/11/qushi</id>
   <content type="html">&lt;h1&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-11-11/1.png&quot; alt=&quot;当下网页设计趋势&quot; title=&quot;当下网页设计趋势&quot;&gt;&lt;/p&gt;

&lt;p&gt;在过去的一年中，我们都看到了网页设计趋势在日益增长。或许有些朋友还记得我早些时候的一些文章关于网页设计，在今天这篇文章中，我只是对网页设计的全新趋势走向简单的分析下。这只是本人对当下网页设计做出的一些小总结。希望这样的归类总结能给你带来更多的思路和想法。(点击图片可直接跳转至相关网页)&lt;/p&gt;

&lt;h3&gt;1.响应式网页设计（Responsive Web Design）&lt;/h3&gt;

&lt;p&gt;响应式设计已经变成了一个最终来使设计的布局适配各种数字媒体视窗的入口。此想法是用来支持所有的来自笔记本电脑，台式机，智能手机，平板和任何将来将要发布的设备。
除了多终端的多样化，我们还可以看到我们的电脑屏幕，手机屏幕都在不断变大，而在对未来生活的预测、概念设计里，“屏幕”这个产物更是被运用到多种新平台上。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.tetequ.com/member/index&quot; target=&#39;_blank&#39;&gt;&lt;img src=&quot;/blog-assets/2013-11-11/3.jpg&quot; alt=&quot;当下网页设计趋势&quot; title=&quot;特特区&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;你应该想象这个趋势更像是一份单一的代码，完美地运行在所有环境下统一网页的设计中。响应式站点被经常想象为是向手机浏览器迎合，但那不是唯一的目的。你也可以拥有一个让浏览器窗口更大，可以让你的页面布局添加鲜艳的插图和图案的响应式站点。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.tetequ.com/member/index&quot; target=&#39;_blank&#39;&gt;&lt;img src=&quot;/blog-assets/2013-11-11/2.png&quot; alt=&quot;当下网页设计趋势&quot; title=&quot;特特区&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;2.固定的头部条目&lt;/h3&gt;

&lt;p&gt;使用CSS position:fixed属性是使你的头部条目固定在网站最好的方法。当用户往下滚动你网页的时候，此方法会提供一个静止不动的导航和一个回主页的路径。这个趋势已经有一段时间，但是我们现在才看到它全部的力量。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.tetequ.com&quot; target=&#39;_blank&#39;&gt;&lt;img src=&quot;/blog-assets/2013-11-11/4.png&quot; alt=&quot;当下网页设计趋势&quot; title=&quot;特特区&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;因为他们几乎可以工作在任何网站，所以看上去很有趣。它们包括社交网络、博客甚至有设计工作室又或者是私人公司。这种设计非常的流行并且看上去和许多布局很搭配。但是从美学角度看，这个固定的条目提供了一个减小操作网站距离感的特别用户体验。&lt;/p&gt;

&lt;h3&gt;3.大图片背景&lt;/h3&gt;

&lt;p&gt;摄影师或者摄影爱好者肯定很享受这种设计趋势。我已看过无数的案例来讨论使用超大图片来作为背景的这种想法。这是获取用户注意力极佳的方法并且当恰如其分的完成时会看上去很棒。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://im.qq.com/macqq/index.shtml&quot; target=&#39;_blank&#39;&gt;&lt;img src=&quot;/blog-assets/2013-11-11/6.png&quot; alt=&quot;当下网页设计趋势&quot; title=&quot;QQ for mac&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;当大图赏心悦目的时候我就慢慢的喜欢上了它们，当你把这种大图做背景的想法融合进你的设计的时候，这样的设计技术，在市场上会使你的网站显得更专业。再如&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://qzone.qq.com/&quot; target=&#39;_blank&#39;&gt;&lt;img src=&quot;/blog-assets/2013-11-11/7.png&quot; alt=&quot;当下网页设计趋势&quot; title=&quot;QQ空间&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;4.无限滚动&lt;/h3&gt;

&lt;p&gt;无限滚动加载至少存在许多年了,但是此技术直到今年才成为主流，我想在2013年还会继续。最简单的是chrome商店&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/category/apps?utm_source=chrome-ntp-icon&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/blog-assets/2013-11-11/8.png&quot; alt=&quot;当下网页设计趋势&quot; title=&quot;chrome商店&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这是一个极好的技术，可是并不能应用在每一个布局上。但是对于能适应此方法的网站从视觉和表现上都相当惊人。&lt;/p&gt;

&lt;h3&gt;5.移动导航切换&lt;/h3&gt;

&lt;p&gt;当谈到响应式设计时，最难的问题之一是如何创建一个靠谱的导航。你希望能给用户对你所有重要的链接以直接的访问，而不要淹没在页面中而使其难以辨读。先保持导航隐藏当需要时再出现也是一个很好的点子。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.tetequ.com/member/index&quot; target=&#39;_blank&#39;&gt;&lt;img src=&quot;/blog-assets/2013-11-11/9.jpg&quot; alt=&quot;当下网页设计趋势&quot; title=&quot;特特区&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;我所喜欢的导航切换是你可以以多种方式设计导航，你可以有从头部到底部的导航或者往下滑动，又或者左右推动内容。设计师有许多玩的选择但是对于UI实验需要更多的时间。&lt;/p&gt;

&lt;h3&gt;6.单页面网页设计&lt;/h3&gt;

&lt;p&gt;单页面设计是一个很大的话题，覆盖了许多不同网站分类。显而易见自从万维网创建单页面网站就出现了。但是最近几年这种趋势变成了一种更加自然的用户体验。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dlmu.net&quot; target=&#39;_blank&#39;&gt;&lt;img src=&quot;/blog-assets/2013-11-11/10.png&quot; alt=&quot;当下网页设计趋势&quot; title=&quot;启航计算机协会&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;7.滚动侦测网页设计（Scrollspy）&lt;/h3&gt;

&lt;p&gt;利用CSS的实现将导航栏固定在网页顶部（大多数是顶部，当然也有侧面或底部），并将版面内容按照导航顺序垂直或横向排布，使得用户点击相应导航tab时页面自动滑到相应页面，而若点击内容，导航也将随之改变。这样的网页设计页面基本不会跳转，每一个tab所指向的页面内容也基本一屏显示完整，所以在页面呈现的内容上会有所局限。为不影响布局一般也会伴随自适应。&lt;/p&gt;

&lt;p&gt;　　
滚动侦测式的网页会给设计师带来了很大挑战——要在有限空间内保证内容呈现的完整性，故设计师会在版面上下足功夫。而这类网站结构和视差设计有异曲同工之处，所以我们发现很多网站会结合两者，给观者带来不一样的视觉感受和用户体验。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dlmu.net&quot; target=&#39;_blank&#39;&gt;&lt;img src=&quot;/blog-assets/2013-11-11/11.png&quot; alt=&quot;当下网页设计趋势&quot; title=&quot;启航计算机协会&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;8.视差滚动设计（Parallax Design）&lt;/h3&gt;

&lt;p&gt;视差设计可以说是近年来网页设计中的一大突破，也备受推崇。视差滚动是让多层背景以不同速度滚动，以形成一种3D立体的运动效果，给观者带来一种独特的视觉感受。&lt;/p&gt;

&lt;p&gt;除此以外，鼠标滚轮的流畅体验，让用户在观看此类网站时有一种控制感，简单来说这是有响应的交互体验。就好像童年看到走马灯，转动它你就能看到人物动起来，还能欣赏故事。视差滚动设计的趣味也在于此。所以无论是网站还是电商商品宣传页都经常采用视差设计，吸引眼球也很受用户喜爱。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://graphicnovel-hybrid4.peugeot.com/start.html&quot; target=&#39;_blank&#39;&gt;&lt;img src=&quot;/blog-assets/2013-11-11/13.jpg&quot; alt=&quot;当下网页设计趋势&quot; title=&quot;Ben the Bodyguard&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://everylastdrop.co.uk/&quot; target=&#39;_blank&#39;&gt;&lt;img src=&quot;/blog-assets/2013-11-11/12.jpg&quot; alt=&quot;当下网页设计趋势&quot; title=&quot;every Day&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;9.扁平化设计（Flat Design）&lt;/h3&gt;

&lt;p&gt;扁平化设计可以说是去繁从简的设计美学。去掉所有装饰性的设计，可以说是对之前所推崇的拟物化设计的颠覆。&lt;/p&gt;

&lt;p&gt;我们不能妄加评论说这是好还是不好，只能说它提供了一种新的设计思维。扁平化设计是否会成为将来的趋势我们也无法回答，尽管褒贬不一，备受争议，但是就现在来说它是当下的一种潮流。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://windows.microsoft.com/zh-cn/windows-8/meet&quot; target=&#39;_blank&#39;&gt;&lt;img src=&quot;/blog-assets/2013-11-11/14.png&quot; alt=&quot;当下网页设计趋势&quot; title=&quot;win8&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.triplagent.com/&quot; target=&#39;_blank&#39;&gt;&lt;img src=&quot;/blog-assets/2013-11-11/15.jpg&quot; alt=&quot;当下网页设计趋势&quot; title=&quot;TriplAgent&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;结束语&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;当创建数字产品时，用户界面是最复杂的话题。尝试着使导航和内容样式获得成功的用户体验。这些设计趋势目的是给设计师指明正确的方向。虽然设计师和开发者都需要和市场接轨并跟上潮流的脚步，但是所谓的潮流是当下的，未来确是未知的。我们的确需要保证自己不被行业趋势甩到队尾，但更重要的是在浪潮中适应和学习。&lt;/p&gt;

&lt;p&gt;相信以上的这些设计方法会流行相当长的一段时间，当然，你也可以发挥创造力，有机地组合它们，做出优秀的网站。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>javascript 小技巧</title>
   <link href="http://ssy.me/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2013/11/07/javascript-tip"/>
   <updated>2013-11-07T00:00:00+08:00</updated>
   <id>http://ssy.me/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2013/11/07/javascript-tip</id>
   <content type="html">&lt;h1&gt;&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;字符串逆序&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;去掉前后空格&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/(^\s*)|(\s*$)/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;数组复制&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;将伪数组转化为数组&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;makeArray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>31 种 CSS 选择器用法</title>
   <link href="http://ssy.me/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2013/10/25/31CSS"/>
   <updated>2013-10-25T00:00:00+08:00</updated>
   <id>http://ssy.me/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2013/10/25/31CSS</id>
   <content type="html">&lt;h1&gt;&lt;/h1&gt;

&lt;h3&gt;1.*&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;星号选择器用于选取页面中的所有元素，可用于快速清除所有元素的 margin 与 padding，但最好只在测试的时候使用，而不要正式用在 CSS 文件中，否则会大大加重浏览器负担。此外，星号选择器也可以给父层的所有子元素设定样式，重复一遍，尽量少用这种方式：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nf&quot;&gt;#container&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;兼容 IE6+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. #X&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nf&quot;&gt;#container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;960px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;id 选择器，最常见的选择器用法之一，不可重复使用。&lt;/p&gt;

&lt;p&gt;兼容 IE6+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. .X&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.error&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;class 选择器，也是最常见的选择器用法之一，与 id 选择器不同的是 class 选择器可同时选取多个元素，而 id 选择器只能给一个独一无二的元素设定样式。&lt;/p&gt;

&lt;p&gt;兼容 IE6+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. X Y&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;text-decoration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;后代选择器 (descendant selector)，选取 X 元素内的所有 Y 元素，比如上面这段代码将选取 li 标签内的所有链接。&lt;/p&gt;

&lt;p&gt;兼容 IE6+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. X&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;标签选择器 (type selector)，用于选取 HTML 标签 (tag)。&lt;/p&gt;

&lt;p&gt;兼容 IE6+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. X:visited and X:link&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:link&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:visted&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;purple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;:link 伪类选择器 (pseudo class selector) 用于选取所有未点击过的链接，而 :visited 则用于选取所有已访问过的链接。&lt;/p&gt;

&lt;p&gt;兼容 IE6+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. X + Y&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;临近选择器 (adjacent selector)，选取紧邻在 X 元素后面出现的第一个元素，比如上面这段代码将选取 ul 元素后出现的第一个元素，也就是 p 元素。&lt;/p&gt;

&lt;p&gt;兼容性 IE6+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. X &amp;gt; Y&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;#container&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在第 4 条中，后代选择器 X Y 选取父层 X 内的所有 Y 元素；子选择器 X &amp;gt; Y 则只选取直接出现在父层 X 内的 Y 元素。比如下面的 HTML 结构中，#container &amp;gt; ul 选取直接出现在 div#container 内的 ul 元素，不包含嵌套在 li 内的 ul 元素：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt; List Item
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt; Child &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt; List Item &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt; List Item &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt; List Item &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;兼容 IE7+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. X ~ Y&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;同样也是临近选择器，前面第 7 条 X + Y 选取紧邻在 X 后出现的第一个元素，而 X ~ Y 将选取 X 元素后出现的所有同级元素。上面这段代码将选取 ul 元素后出现的所有同级 p 元素，而不是像 ul + p 这样选取第一个出现的 p 元素。&lt;/p&gt;

&lt;p&gt;兼容 IE7+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. X[title]&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;属性选择器 (attributes selector)，根据元素使用的属性进一步缩小选取范围，上面这段代码将选取所有使用了 title 属性的链接，或者 a[title=&amp;quot;title content&amp;quot;]{color:green} 再进一步缩小选取范围。&lt;/p&gt;

&lt;p&gt;兼容 IE7+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;11. X[href=&amp;quot;foo&amp;quot;]&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://net.tutsplus.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#1f6053&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* nettuts green */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面这段代码将选取所有跳转到 http://net.tutsplus.com 的链接，这些链接将显示为绿色，其他链接不受影响。&lt;/p&gt;

&lt;p&gt;只是这种方式很严格不能相差一个字符，下面将会逐一介绍更灵活的用法。&lt;/p&gt;

&lt;p&gt;兼容 IE7+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;12. X[href*=&amp;quot;nettuts&amp;quot;]&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;tuts&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#1f6053&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* nettuts green */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;表示只要属性值中包含双引号内的内容就满足选取要求，这段代码将选取跳转到 nettuts.com，net.tutsplus.com，或者 tutsplus.com 等链接。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;兼容 IE7+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;13. X[href^=&amp;quot;http&amp;quot;]&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;url(path/to/external/icon.png)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;no-repeat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;padding-left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;^ 表示只要属性值以双引号内的内容开头就满足选取要求，这段代码也常用来给页面中所有外部接设定样式。&lt;/p&gt;

&lt;p&gt;兼容 IE7+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;14. X[href$=&amp;quot;.jpg&amp;quot;]&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;$ 表示只要属性值以双引号内的内容结尾就满足选取要求，这段代码将选取所有跳转到 jpg 图片的链接。&lt;/p&gt;

&lt;p&gt;兼容 IE7+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;15. X[data-*=&amp;quot;foo&amp;quot;]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;上面第 14 条提到了如何选取所有跳转到 jpg 图片的链接，若要选取跳转到图片的所有链接可以用下面的方法：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;.jpeg&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;.png&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;.gif&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者，先给图片链接添加 data- 属性（注：HTML5 Custom Data Attributes）&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;path/to/image.jpg&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-filetype=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;image&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; Image Link &lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后再通过属性选择器选取：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data-filetype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;image&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;兼容 IE7+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;16. X[foo~=&amp;quot;bar&amp;quot;]&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data-info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;external&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data-info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;image&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果属性值中有用空格分隔的一连串属性值，~ 可以选取其中一个属性值，比如：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;path/to/image.jpg&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-info=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;external image&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; Click Me, Fool &lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;借助 ~ 选取包含 external 或者 image 属性值的元素：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;c&quot;&gt;/* Target data-info attr that contains the value &amp;quot;external&amp;quot; */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data-info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;external&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* And which contain the value &amp;quot;image&amp;quot; */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data-info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;image&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;兼容 IE7+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;17. X:checked&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;radio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:checked&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;:checked 伪类选择器用于选取所有标记为 checked 的元素，比如单选框 (radio button) 或复选框 (checkbox)。&lt;/p&gt;

&lt;p&gt;兼容 IE9+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;18. X:after&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;:before 与 :after 是两个令人兴奋的伪类选择器，几乎每天都有人发明出一些新用法，这里简单介绍一下如何用它清除浮动：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.clearfix&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;both&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;visibility&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.clearfix&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;inline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这种方式通过 :after 在元素后面添加一块区域，然后将其隐藏，可以弥补 overflow: hidden; 的缺陷。&lt;/p&gt;

&lt;p&gt;根据 CSS3 选择器标准，理论上伪类选择器应该使用双冒号，但实际上浏览器也支持单冒号的形式，所以可以继续使用单冒号。&lt;/p&gt;

&lt;p&gt;兼容 IE8+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;19. X:hover&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#e3e3e3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最常用的伪类选择器，不多解释了，只是需要注意 IE6 不支持将 :hover 作用于除 a 链接外的其他元素。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;border-bottom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;另外提醒一点：border-bottom: 1px solid black; 的效果要比 text-decoration: underline; 好看一些。&lt;/p&gt;

&lt;p&gt;兼容 IE6+ （在 IE6 中 :hover 只能作用于链接）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;20. X:not(selector)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:not&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;#container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;:not 伪类选择器有时会起到很重要的作用，假设现在要选取除 #contaienr 外的所有 div 元素，就可以用上面的代码实现。&lt;/p&gt;

&lt;p&gt;兼容 IE9+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;21. X::pseudoElement&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:first-line&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1.2em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过伪元素（使用双冒号 ::）可以给元素的某一部分设定样式，比如第一行、或者第一个字母。需要注意的是，这只对块级元素 (block level elements) 生效。&lt;/p&gt;

&lt;p&gt;提示：伪元素 (pseudo element) 使用双冒号 ::&lt;/p&gt;

&lt;p&gt;选取段落的第一个字母&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:first-letter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;cursive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;padding-right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这段代码将选取页面中所有 p 元素，然后再选取其中的第一个字母。&lt;/p&gt;

&lt;p&gt;选取段落的第一行&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:first-line&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1.2em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;与上面的例子类似，通过 ::first-line 选取页面的第一行。&lt;/p&gt;

&lt;p&gt;为了兼容 CSS1 与 CSS2 中的伪元素（比如 :first-line, :first-letter, :before 以及 :after），浏览器接受单冒号与双冒号两种格式，但对于 CSS3 中最新引入的伪元素，必须使用双冒号。&lt;/p&gt;

&lt;p&gt;兼容 IE6+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;22. X:nth-child(n)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;:nth-child(n) 用于选取 stack 中的某一个元素，只接受整数作参数（参数从 1 开始计数），如果你想选取第二个 li 元素，只需这样写 li:nth-child(2)。&lt;/p&gt;

&lt;p&gt;也可以设定可变的参数，比如 li:nth-child(4n) 将选取第 4, 8 , 12… 个元素（4*n, n=1, n++）。&lt;/p&gt;

&lt;p&gt;兼容 IE9+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;23. X:nth-last-child(n)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-last-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;除了正序（从上往下）选择，也可以使用 :nth-last-child(n) 倒序（从下往上）选择第几个元素，其他用法与第 22 条完全一样。&lt;/p&gt;

&lt;p&gt;兼容 IE9+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;24. X:nth-of-type(n)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-of-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;:nth-of-type(n) 的作用不是选取子元素 (child element)，而是选取同类元素 (type of element)。想象一下 HTML 文件中包含 5 个 ul 元素，现在要选取第三个，只需使用上面的代码，而不用再单独这个 ul 添加 id。&lt;/p&gt;

&lt;p&gt;关于 :nth-child 与 :nth-of-type 的区别，具体请查看 CSS-Tricks 网站的解释，简单来说，如果父层内只包含一种元素（比如都是 p 元素）那两种用法是等效的，如果父层包含多种元素（比如 p 元素与同级的其他元素），需要选取第几个 p 元素时应该用 :nth-of-type。&lt;/p&gt;

&lt;p&gt;兼容 IE9+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;25. X:nth-last-of-type(n)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-last-of-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;与第 24 条用法相同，倒序选取同类元素。&lt;/p&gt;

&lt;p&gt;兼容 IE9+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;26. X:first-child&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:first-child&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;border-top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;选取父层内的第一个子元素。&lt;/p&gt;

&lt;p&gt;兼容 IE7+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;27. X:last-child&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:last-child&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;与第 26 条用法相同，区别在于 :last-child 选取父层元素内的最后一个子元素。&lt;/p&gt;

&lt;p&gt;:first-child 与 :last-child 通常用来清除边框 (border)，比如 &amp;lt;ul&amp;gt;&amp;lt;/ul&amp;gt;内每个 &amp;lt;li&amp;gt;&amp;lt;/li&amp;gt; 都使用了 border-top 与 border-bottom 边框，结果是，第一个元素的上方与最后一个元素的下方会是单边框效果。这种情况可以用 :first-child 与 :last-child 清除上下的边框，而不用给第一个元素添加 id=&amp;quot;first&amp;quot; 或者给最后一个元素添加 id=&amp;quot;last&amp;quot;。&lt;/p&gt;

&lt;p&gt;兼容 IE9+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;28. X:only-child&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:only-child&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个伪类选择器不常用，它可以选取包含唯一指定子元素的父层。比如上面的代码中将选取下面第一个 div 元素，而不是第二个 div 中的 p 元素。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;p&amp;gt;&lt;/span&gt; My paragraph here. &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt; Two paragraphs total. &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt; Two paragraphs total. &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;兼容 IE9+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;29. X:only-of-type&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:only-of-type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个选择器会选取某个元素，并且这个元素在其父层内没有其他同级同类元素（不一定是唯一元素）。比如，要选取所有只包含一个 li 元素的 ul 元素该怎么做呢？如果使用 ul li 将选取所有 li 元素，应该使用 only-of-type。&lt;/p&gt;

&lt;p&gt;兼容 IE9+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;30. X:first-of-type&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;first-of-type 伪类可以选取某种元素的第一个同类元素。&lt;/p&gt;

&lt;p&gt;为了更好地理解它的用法，现在思考一下如何在下面的 HTML 结构中选取 List Item 2 ？&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;My&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;paragraph&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;here&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Item&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Item&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Item&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Item&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;方法一&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:first-of-type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这段代码的意思是：首先选取第一个 ul 元素；然后选取其中的所有直接子元素，也就是 li；最后选取第二个子元素。&lt;/p&gt;

&lt;p&gt;方法二&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:last-child&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;找到 p 元素后第一个出现的 ul 元素，然后选取其中的最后一个子元素。&lt;/p&gt;

&lt;p&gt;方法三&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:first-of-type&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-last-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;找到第一个 ul 元素，然后从上往下选取第一个子元素。&lt;/p&gt;

&lt;p&gt;兼容 IE9+&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;31. 伪类选择器叠用&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;有些伪类选择器或者伪元素是可以叠用的，例如：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nf&quot;&gt;#post&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-of-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:first-letter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;目测兼容 IE9+，听说 IE10 有个小 bug&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>对前端开发初学者的一些建议</title>
   <link href="http://ssy.me/%E6%9D%82%E8%B0%88/2013/10/16/web_advice"/>
   <updated>2013-10-16T00:00:00+08:00</updated>
   <id>http://ssy.me/%E6%9D%82%E8%B0%88/2013/10/16/web_advice</id>
   <content type="html">&lt;h1&gt;&lt;/h1&gt;

&lt;p&gt;其实写这篇文章只能对初学者有用，为什么那。因为我也是刚入行没到1年的新人。有的人说，前端的知识刚多少东西。改改颜色，弄弄文字大小而已。2年就已经是老鸟了。
好吧我之前也这么认为的，我不否认。但是随着项目的增加，学到更多的知识，让我感觉前端的水很深。
html5和css3的出现也在这很深的水里增添了几分神秘感。到底web以后能做什么。我想许多业内做过5-6年的是前端开发人也未必能预测出来。
言归正传，对前端开发初学者如何能在繁杂的web领域学习我自己这总结了一些经验。希望对大家有所帮助。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1).开一个技术博客&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;技术博客不是新浪网易的blog，是独立空间独立域名并且自己建立的blog。这个blog不一定要自己写程序实现。可以用很成熟的建站工具比如：wordpress。不过要是前端的话最好可以实施jekyll这个框架，因为不涉及到后台。就是说前端真的可以脱离后台了（虽然这是臆想，不过jekyll毕竟实现了）。在建站的过程中你可以甚好的把握一下整个网站的建立过程和流程。能更清晰的了解到一个团队在做网站的各个流程和过程，对工作也很有帮助。
建立完blog当然不是没事了，开始记录你的个人学习笔记吧。&lt;/p&gt;

&lt;p&gt;收集→整理→消化→分析→应用→分享。基本上就是这么个流程。
在收集分享的过程中，会遇到很多牛人。一定要虚心向他们学习。你的学习态度往往决定了你能学习多少知识。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2)少聊天多动手&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;根据我的经验，在你认识很多人后，加入一些学习群组后。会随后产生惰性和依赖性。很多问题都会问群里的朋友，甚至文字缩进这样的问题也会问。（我碰到过，开始我还耐心解答，后来问题越来越**[此处省略2个字]后来都懒得理了）如果这样立刻改掉这个习惯，打开googole搜索你的问题，然后找答案吧。甚至在别人问一些你不懂的问题的时候也自己多搜索多尝试多做。来不断的提高自己。&lt;/p&gt;

&lt;p&gt;喜欢看视频教程，电子书，下载了一堆还在那放着，从未精读过的着的前端兄弟是不是就是你。就算是看了也是看完就算，从没思考从没追问从没实践过有木有。该怎么做那？相信看我的标题也你该知道了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3)收听前端大牛的微博&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;一说微博所有人都把娱乐结合到一起。但微博另一个特点是信息的更新速度和实时性。你可以在订阅中发现很多最新最好的前端技术。一个连接甚至能让你看到很多你看不到的前端世界。新浪微博-腾讯微博都可以，学习的氛围都很强。只有你想不到，没有你看不到。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4）订阅前端大牛博客&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;如果微博是获取新知识的道路，那么博客就是新知识的目的地。真正的内容和实质都在这里。所以这也是我认为微博永远不可能取代博客的原因之一。他们俩的关系就和快餐和正餐的关系差不多。rss阅读器刚开始用还真的不太习惯。不过消息的及时性还是真不错的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5）学习html5和css3&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这个问题在我所在的css学习群讨论过，很多前端同学都会问。用学html5和css3吗？好像在中国这个大的浏览器环境下它们都是浮云。估计应用上都要好些年吧。学了也没用。&lt;/p&gt;

&lt;p&gt;我认为：html5和css3的使用会先在移动平台上普及。当然是智能移动平台。因为他们的浏览器都是wekit内核。有着天生的地理优势。优秀的用户体验会让用户对web应用重新点燃热情。好吧有什么前景自己看吧。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>如何通过数据指导产品优化</title>
   <link href="http://ssy.me/%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1/2013/10/13/youhua"/>
   <updated>2013-10-13T00:00:00+08:00</updated>
   <id>http://ssy.me/%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1/2013/10/13/youhua</id>
   <content type="html">&lt;h1&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-13/1.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;设计师生来就是要解决问题的。那如何才能更好、更高效地解决问题？首先要求我们能发现问题，数据分析就是一种常用的发现问题的手段。通过数据定位问题，然后用设计方案来尝试解决问题，之后再用量化的数据指标来评估问题是否解决了，解决了多少。通过迭代优化，问题就能够得到较好解决。&lt;/p&gt;

&lt;p&gt;本文结合自己在在登录产品的体验优化中积累的一些实战经验，重现过程中的设计点滴，有效果明显的方案，也有效果不明显的优化尝试，最后将总结一些通用的设计思路。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;登录失败的原因在哪？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;登录框一般是个较简单的界面，它包括：账户名和登录密码、校验码、其他账户登录入口、注册等关联操作等元素。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-13/2.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;看似一个简单的界面，每天却有不少用户尝试登录却登录失败。某些流量较大的网站，每天可能有上百万登录失败次数。登录作为用户进入一个产品的第一道门，体验非常关键。因此我们把登录成功率作为衡量登录产品体验好坏的最重要的指标。&lt;/p&gt;

&lt;p&gt;通过数据收集和分析后，我们发现用户登录出错的原因占比如下图（图中数据做了模糊处理）：登录密码出错、账户名出错、校验码出错是影响登录成功率的top3因素。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-13/3.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;详细定位问题，各个击破&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;针对上述的top3问题，我们迭代做了优化。在此以校验码出错的优化为例，来说明优化思路。前面我们通过数据定位了大问题出在哪里，接下来我们需要详细定位问题。那校验码为什么出错？有什么解决方案？&lt;/p&gt;

&lt;p&gt;通过页面埋点点击数据和后台日志我们发现用户刷新图片校验码概念较高，平均每个用户会刷新2次校验码才能输入正确。所以问题可归纳为：校验码识别度低，容易输错。&lt;/p&gt;

&lt;p&gt;那对应有怎样的解决策略？不妨尝试下这种循序渐进的解决思路：事前、事中、事后。&lt;/p&gt;

&lt;p&gt;1）事前：我们把输入图片校验码作为一个事件，那“事前”的意思就是不出现图片校验码，或者降低校验码出现概率。图片校验码的作用是防止机器批量登录行为。逆向思考下：如果我们能保障系统安全的情况下，通过技术手段尽可能提前识别是人在请求登录，还是机器恶意登录。确信识别为人在登录的情况下，就不出现图片校验码（如下图），就可以大大减少正常用户登录时输入图片校验码的概念。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-13/4.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;上线后，通过跟踪登录成功率数据，发现此优化效果非常明显。&lt;/p&gt;

&lt;p&gt;2）事中：近一步发现校验码是数字和字母随时混搭出现，如数字“0&amp;quot;和字母“O”，数字&amp;quot;1&amp;quot;和字母“I” 很容易混淆。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-13/5.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;解决方案：降低容易混淆的数字和字母出现的概率，如果出现了数字“0&amp;quot;或字母“O”，默认用户输入其中一个都是正确的。条件允许的话，还可以过滤掉这些容易混淆的组合，提高用户首次输入的成功率。&lt;/p&gt;

&lt;p&gt;还有一个解决策略是用户输入校验码后即时反馈结果：输入正确还是错误。&lt;/p&gt;

&lt;p&gt;输入正确的提示如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-13/6.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;输入错误的提示如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-13/7.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;通过这个优化，用户可以提前知道自己出错了，而不需要登录请求后才知道出错了，导致一次登录失败。所以用户登录效率更高了（用时更短），而登录成功率也有不小的提升。&lt;/p&gt;

&lt;p&gt;3）事后：用户输错一次图片校验码了，再次输入如何能更容易成功？如下图中，用户通过点击图片校验码区域刷新出现另一张校验码，但相对隐晦，部分用户出错了，就不知道点击换一张校验码图片。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-13/8.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;解决方案：强化刷新图片校验码的操作按钮，同时增加语音校验码。虽然语音校验码本意是为盲人用户设计的，但正常用户在图片校验码老是输错情况下，也可以使用语音校验码。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-13/9.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;最后，总结下通过数据来指导产品优化的一般流程。&lt;/p&gt;

&lt;p&gt;第一步：确定产品体验的量化指标&lt;/p&gt;

&lt;p&gt;如上面案例中我们用成功率来衡量登录产品体验好坏的指标。什么指标可以用来量化某个产品的体验呢？这是目前交互设计领域讨论比较多的话题，这里先不展开阐述，只提供参考建议：一、用户体验的改变对该指标有至关重要的影响；二、该指标很好被量化；三、清楚该指标是如何计算的，项目组达成共识，这样才能更有的放矢的开展设计。&lt;/p&gt;

&lt;p&gt;第二步：数据分析准确定位问题&lt;/p&gt;

&lt;p&gt;找到影响上述量化指标的产品问题点在哪，如上述案例中登录失败有哪些情况，占比怎样。视产品不同，数据来源可以是产品的后台日志数据，用户点击行为数据或用户来电求助率，等等。再近一步分析：密码为什么出错、账户名为什么出错、图片校验码为什么出错。比如我们通过大量的用户来电客服录音就可以找到用户密码出错的真正原因：将支付密码和登录密码混淆，跟其他产品的秘密混淆；密码设置得太复杂，记不住；密码出错后，找回密码不成功，等等。&lt;/p&gt;

&lt;p&gt;第三步：迭代优化，用数据检验效果&lt;/p&gt;

&lt;p&gt;找到了问题，就针对性得设计方案。解决思路可以参考上述的“事前”、“事中”和“事后”。事先：问题是否能提前规避，降低发生的概念；事中：问题发生了，如何帮助用户快速解决；事后：如何避免再次发生。优化方案快速上线，看对应的体验指标是否改变了，改变了多少。往往不可能一步到位就把问题解决掉，需要迭代优化，不断通过数据跟踪来修正设计策略。通过效果累计，达到我们最终的设计目标。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;转自：&lt;a href=&quot;http://ux.etao.com/posts/818&quot;&gt;阿里妈妈UED&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>复杂产品的响应式设计【流程篇】</title>
   <link href="http://ssy.me/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2013/10/05/Responsive_Web_Design_step"/>
   <updated>2013-10-05T00:00:00+08:00</updated>
   <id>http://ssy.me/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2013/10/05/Responsive_Web_Design_step</id>
   <content type="html">&lt;h1&gt;&lt;/h1&gt;

&lt;p&gt;都说2013年将是响应式设计爆发的一年。一淘设计团队在去年一淘首页改版时初步尝试了响应式，最近在一淘“玩客”项目中有了更加深入地应用，第一次在复杂产品中实现了全站响应式。中间积累了一些经验也踩了不少坑，于是就有了这个响应式设计三部曲，此系列文章包含理念篇、知识篇和流程篇。&lt;/p&gt;

&lt;p&gt;响应式网页不像传统网页只需考虑一种状态，不是交付一套设计稿就完事儿了，它给设计、前端和开发团队之间的协作模式带来新的挑战。在一个复杂产品全面响应式的项目里，交互每个阶段该产出什么？交互与视觉如何协作？前端何时介入？哪些事情让后端开发来做更合理？经历“玩客”第一版后，我们得到了一些答案。&lt;/p&gt;

&lt;p&gt;响应式设计之所以叫响应式“设计”而不叫响应式“技术”，是因为它是一项设计先行的工作。需要设计先明确好响应方式再实现出来，不能出一套设计稿后等着前端看情况把它变成响应式网页。所以整个流程最初从交互阶段开始，分成6个主要步骤，视觉、前端、开发等角色根据情况尽早介入。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-05/1.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step1：信息架构，确定内容策略。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;根据产品定位和用户分析，交互设计师确定站点信息架构。（信息架构呈现方式有很多种，这不是本文重点，不详述）。&lt;/p&gt;

&lt;p&gt;这时候可以明确这个产品有多少页面，每个页面包含多少内容，内容优先级是什么。很多产品包含N多页面，每个页面一一考虑响应式设计容易造成混乱且成本巨大。所以下一步重要工作是分析页面类型把页面归类。以玩客为例，可以把10多个页面分成三类：列表类页面、详情类页面、操作类页面。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-05/2.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step2：移动框架&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;先说下为什么第二步要先设计移动框架。移动优先是移动互联网浪潮下应运而生的理念，由Luke Wroblewski最早提出。移动优先并不是指移动更重要，响应式设计理念里设备是同等重要的。它是指优先设计手机端的体验，有三个原因：&lt;/p&gt;

&lt;p&gt;手机让设计专注，强迫你想清楚什么信息是最重要的。因为手机屏幕小，每屏呈现的内容少；触屏手机使用手指操作而非鼠标这样的精密设备来操作，对操作有更高要求；手机使用场景更加丰富，很多场景用户是缺乏耐心的，比如当你排队看电影正在找手机上的电子票，马上排到你了翻半天却迟迟找不到那张票这是多么令人崩溃的事情。
手机许多特性让设计更强大。手机上的语音输入、地理位置定位、丰富的手势操作、越来越多传感器，手机交互比PC拥有更多可能性。从手机开始设计，让你更早地思考如何发挥这些特性。
手机正在迅猛增长。手机即将超越PC，成为最主流的上网方式，这个趋势是不可逆的。
从移动开始做设计对习惯了PC环境的设计师可能是一种挑战，思考方式工作习惯都被迫做出改变。但这种改变必须去适应，因为用户习惯在改变。&lt;/p&gt;

&lt;p&gt;回正题，上一步已经把页面归类并确定每个页面内容优先级，现在接着分析每种类型页面的导航、主体内容等框架结构，最终得出一份框架结构表。从玩客框架结构看出，全局导航是所有页面公共的，局部导航只有列表类页面才有，详情类页面都有一个“页面主人”信息，而关联导航不是每个页面都有。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-05/3.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;接着开始设计手机端“超细长页面”的框架（因为手机上一般是单列布局，所以页面又细又长）。这一步开始把信息结构设计成最粗放的框架，可以在白板或纸面上完成。要实现的关键目标是：把这个页面最需要呈现给用户的内容放在最重要的位置，要符合手机上的阅读和操作习惯，尽量利用手机设备的特性。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-05/4.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step3：响应式框架&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;根据手机端的框架拓展出平板和PC端框架。这是复杂产品实现响应式设计的关键步骤，它是让众多页面有条理地响应起来的基础。第一件事情是确定响应式模式，即从手机到平板到PC，导航怎么变化，页面布局用哪种响应方式，根据内容优先级如何调整模块顺序，等等。玩客在PC端以三栏布局为主，左边栏作为局部导航或者主人信息区，中间栏始终是页面主体信息，当页面需要关联导航时统一放在右边栏。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-05/5.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;到现在这个阶段所有页面的响应式开始有规则可循，下一步工作就是继续细化规则，把框架精确到具体尺寸。具体说来就是制定流体栅格系统。流体栅格系统是基于百分比的栅格布局工具，具体的制定方法会在另外一个篇章【知识篇】中详细介绍。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-05/6.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;响应式是一种设计理念与前端技术紧密结合的新兴形态，鼓励尽早进行跨职能沟通协作。交互确定响应式框架和栅格系统后，其他角色就可以同步开展工作了。前端开始介入完成栅格和框架搭建，产出页面基础框架。视觉同步开始探索和定义视觉风格探索，制定视觉框架，产出风格关键词、产品配色方案。整个过程需要几个角色不断讨论确定。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step4：模块设计&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;按照移动优先的原则应该先进行移动端的模块细节设计，不过我们选择了从PC端开始设计细节。因为PC端开发能够充分暴露业务复杂度，项目团队的设计、开发、测试在PC环境下拥有成熟的工具和流程，从PC开始让开发过程更顺畅。所以个人认为移动优先是确定内容策略时应该遵循的理念，细节设计和开发过程是否要移动优先，取决于产品定位和项目团队情况。&lt;/p&gt;

&lt;p&gt;响应式框架确定了页面结构和响应模式，模块设计这个过程开始完善所有信息排版和交互形式，这是交互设计师最熟练也是最耗时的工作。这个过程与传统流程没太大区别，只是心里要不断提醒自己，这个模块不是只为这个设备设计，它在其它设备下会出问题吗？&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-05/7.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;交互确定页面模块细节后可以抽取出产品用到的控件、组件和公共模块，现在视觉和前端开始做一件有别于传统流程的事情。视觉根据前期定义的风格设计控组件和公共模块的视觉效果，把它们拼成一个模拟的页面，我们称之为风格拼贴稿。前端再把风格拼贴稿里的控组件和公共模块实现出来，统一维护一套组件规范代码。&lt;/p&gt;

&lt;p&gt;传统的做法往往是页面视觉定稿后设计师开始整理视觉规范标注给前端。风格拼贴稿是将这个工作尽可能提前，并变成一个设计协作利器。它的好处是：&lt;/p&gt;

&lt;p&gt;1、一个页面的视觉效果实际上是由一堆控组件和公共模块组成，用真实的控组件和公共模块拼贴的模拟页面已经可以呈现出产品的视觉风格。把一个产品10多个页面的视觉稿全部完成定稿是非常费时费力的事情，产出一份风格拼贴稿则轻松得多。所以它是一个高效的设计工具。&lt;/p&gt;

&lt;p&gt;2、复杂产品总是涉及多个设计师和前端并行工作，尽早地把控组件和公共模块抽取出来统一管理，是保证视觉风格一致性的有效方法。避免不同设计师同时设计同一个控组件或公共模块，减少重复开发造成的浪费。也大大降低后期更新和维护页面的成本，比如当需要修改“关注”按钮时只需改一个就能全站生效。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-05/8.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step5：响应式模块设计&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;PC端页面模块细节和风格拼贴稿完成后，剩下工作是拓展出平板和手机端的完整设计稿，前端产出全部响应式页面代码。进行响应式模块设计时最需要关注的仍然是让操作符合设备习惯，充分利用设备特性。&lt;/p&gt;

&lt;p&gt;至此，一个全站响应式产品的页面就陆续出来了。很多人认为响应式设计维护成本高的理由是一个页面要同时设计多套设计稿。玩客这次经验告诉我们，确定一套设计稿和栅格系统后再拓展出其它设备下的设计方案，工作量远比想象中的低。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-05/9.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step6：测试&amp;amp;讨论&amp;amp;优化，提交开发&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;离大功告成还差最后一步，在真实设备下测试页面效果，项目团队讨论并持续优化。&lt;/p&gt;

&lt;p&gt;在提交开发之前需要尽早明确服务端响应（RESS）的策略。服务端与客户端结合是目前解决响应式页面性能问题的最合理方案。哪些大图片在移动设备下只需输出小尺寸图片？哪些内容在什么设备下是不需要开发输出的？哪些可以减少输出的数据数量？与开发团队协作的响应式可以有效控制页面文件大小，避免页面成为移动设备上烧用户流量的罪魁祸首。&lt;/p&gt;

&lt;p&gt;测试通过后提交页面进入开发环节。我们从可用性和可访问性两方面总结了一份响应式页面测试checklist，测试要点包括但不限于以下内容。欢迎补充。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-05/10.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;结语&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;以上流程是我们团队做完一个全站响应式项目后集体总结得出，不管你是对响应式感兴趣、正在做响应式，还是即将开始做响应式，希望对你有所帮助。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;转自:&lt;a href=&quot;http://ued.taobao.com/blog/2013/05/%E5%A4%8D%E6%9D%82%E4%BA%A7%E5%93%81%E7%9A%84%E5%93%8D%E5%BA%94%E5%BC%8F%E8%AE%BE%E8%AE%A1%E3%80%90%E6%B5%81%E7%A8%8B%E7%AF%87%E3%80%91/&quot;&gt;淘宝有一点博客&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>响应式网页设计</title>
   <link href="http://ssy.me/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2013/10/05/Responsive_Web_Design"/>
   <updated>2013-10-05T00:00:00+08:00</updated>
   <id>http://ssy.me/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2013/10/05/Responsive_Web_Design</id>
   <content type="html">&lt;h1&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-05/001.jpg&quot; alt=&quot;网页设计&quot;&gt;&lt;/p&gt;

&lt;p&gt;在设计中经常遇到这几个问题：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;想要网站兼容手机、平板电脑、pc，就得为不同的设备定制不同的版本。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;想要网站的某些页面在宽屏显示器下一行显示更多的内容，又得为宽屏定制一个版本。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;很多人并不是在全屏的情况下浏览我们的页面，如果让页面随着浏览器宽度改变而相应的调整会不会比较好？&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;有没有办法能有效解决这些问题呢？&lt;/p&gt;

&lt;p&gt;响应式网页设计是Ethan Marcotte在去年5月份提出的一个概念，简而言之，就是一个网站能够兼容多个终端——而不是为每个终端做一个特定的版本。这个概念可以说是是为移动互联网而生的！&lt;/p&gt;

&lt;p&gt;或许大家之前会注意到，有很多知名网站都推出了iPhone或针对智能手机的专门网站，比如3g.qq.com、m.taobao.com、ipad.xxx.com等等。。。甚至前端观察之前也尝试过用wordpress插件实现m.qianduan.net的移动网站。  那么问题就来了——我们要为每一个设备做一个单独的网站吗？来让网站在每个设备中得到相应的视觉风格和操作体验？  这样势必就要增加很多的工作量，而且很多还是重复的。  我们在做页面的时候，一般很强调模块化的概念，我们要求一个合格的模块要能够“可扩展、无侵染”，它要能够用在任何地方都能够正常的显示。响应式网页设计与此类似——网站在任何设备中都能够正常适配，而不用为每个设备单独做个子网站！  但是，产品经理和设计师可能还是会要求网站在各个浏览器里面表现要一模一样，甚至要像素还原——WTF！不同的浏览器本身的功能、行为和处理方式都不一样，为什么要表现完全一样？！&lt;/p&gt;

&lt;h3&gt;响应式Web设计的优势：&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;随着移动设备越来越多，可以提升用户体验。&lt;/li&gt;
&lt;li&gt;该设计没有页版本区分，所以SEO的策略保持一致。&lt;/li&gt;
&lt;li&gt;开发、维护、运营成本优势,页面只有一个，只是针对不同的分辨率、不同的设备环境进行了一些不同的设计，所以在开发、维护和运营上，相对多个版本，能节约成本。&lt;/li&gt;
&lt;li&gt;Google也建议优先采用响应式设计，因为无论是什么页版本都是相同的HTML、相同的内容，Google最容易处理&lt;/li&gt;
&lt;li&gt;兼容性优势：移动设备新的尺寸层出不穷，定制的版本通常只适用于某些规格的设备，如果新的设备分辨率变化较大，则往往不能兼容，而开发新的版本需要时间，这段时间内的访问就是个问题，但是响应式Web设计可以提前预防这个问题。&lt;/li&gt;
&lt;li&gt;操作灵活：响应式设计是针对页面的，可以只对必要的页面进行改动，其他页面不受影响。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;响应式Web设计的趋势：&lt;/h3&gt;

&lt;p&gt;响应式设计在2012年被提的比较多，但是响应式设计仍然在不断变化，不断创新。比如，新的设备不断出来(iPad Mini)，这让以前的设计想法土崩瓦解。而各种Web的响应式设计也获得了越来越多的注意，“让人们忘记设备尺寸”的理念将更快地驱动响应式设计，所以Web设计也将迎来更多的响应式设计元素。&lt;/p&gt;

&lt;p&gt;免费轻量级的响应式 CSS 网格系统，让你可以快速创建适应于手机和平板电脑的网站。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;以上都是只是介绍&lt;/strong&gt;
如果想深入学习请参考:&lt;a href=&quot;http://webdesignerwall.com/tutorials/responsive-design-with-css3-media-queries&quot;&gt;http://webdesignerwall.com/tutorials/responsive-design-with-css3-media-queries&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;相关文章、网站：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://beforweb.com/node/7&quot;&gt;通过CSS3 Media Query实现响应式Web设计&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.templatemonster.com/infographics/responsive-web-design-interactive-guide.php&quot;&gt;一个国外的响应式web设计介绍网站&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>浅谈禁用状态</title>
   <link href="http://ssy.me/%E8%A7%86%E8%A7%89%E8%AE%BE%E8%AE%A1/2013/10/04/DisabledStateTwoOrThreeThings"/>
   <updated>2013-10-04T00:00:00+08:00</updated>
   <id>http://ssy.me/%E8%A7%86%E8%A7%89%E8%AE%BE%E8%AE%A1/2013/10/04/DisabledStateTwoOrThreeThings</id>
   <content type="html">&lt;h1&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-04/banner.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　　禁用，顾名思义，代表不可用的意思。有一个禁用，就一定对应着一个可用。不论是表单，还是复杂性管理界面，抑或是分步引导，这些场景中都有可能出现禁用状态，而如何合理运用禁用状态，让它成为体验的加分项而不是减分项，正是设计师要不断思考、深入实践的。这里抛一些砖出来，希望和大家一起探讨。&lt;/p&gt;

&lt;p&gt;　　“这个不可点的按钮放在这里很鸡肋，我们是不是可以考虑去掉？”&lt;/p&gt;

&lt;p&gt;　　“默认放出按钮吧，不能点也没关系，不然用户怎么了解产品中有哪些功能？”&lt;/p&gt;

&lt;p&gt;　　禁用状态可看为应用程序机制对外暴露的一个直接体现，什么时候展现，什么时候隐藏，也是设计中经常碰到的争议话题。&lt;/p&gt;

&lt;p&gt;　　Alan Cooper曾提到，激活和禁止菜单可以帮助用户了解菜单所反映的用途，从而帮助菜单成为更好的教学工具。例如我们常用的Photoshop选择菜单：&lt;/p&gt;

&lt;p&gt;　　菜单作为软件中最完备的功能集合，应该呈现所有的功能，这是第一个前提。在这个前提下，再根据具体交互的流程来展示哪些操作可用，哪些禁用。仔细想想，在我们日常所见的各种软件中，你并不会对菜单里的禁用项感到陌生。&lt;/p&gt;

&lt;p&gt;　　菜单有一个好基友叫做工具栏。作为一种直观、快捷的功能呈现形式，有幸出现在工具栏上的操作一般来说是软件中最常用的功能，为用户提供快速、高效的操作入口。&lt;/p&gt;

&lt;p&gt;　　工具栏给用户的预期应该是稳定的，可靠的，用户会不知不觉地对工具栏的布局进行学习，记住常用操作的位置，形成使用惯性。如果某个按钮有时消失，有时出现，用户会感到迷惑，也不利于提高界面操作的效率。尤其是当工具栏上有大量操作时，固定位置的好处显而易见，例如Ribbon界面，每个子面板下都包括至少5个以上的按钮：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-04/2.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;

&lt;p&gt;　　看上去，对于菜单、工具栏中的操作，不论是否有禁用状态，默认放出来是最好的选择。然而当操作较少时，设计师们仍然会做出思考和改进。&lt;/p&gt;

&lt;p&gt;　　浏览器，一个所有人都离不开的软件，前进、后退是它的核心功能之一。在这件事上，Chrome和Firefox采取了不同的设计思路。Chrome的前进、后退按钮将位置固定在地址栏左侧，根据当前网页的访问路径判断该按钮是否展示为可用状态，如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-04/3.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-04/4.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;

&lt;p&gt;　　如果用户是按照开新窗口的模式打开新页面，浏览完毕就关闭窗口，前进按钮并不会出现；如果用户在同一窗口内新开页面，再点击后退时，前进按钮快速滑出，动画的衔接让它具备了功能自解释的属性，不会给用户造成理解上的困惑。当页面不能继续前进的时候，此时前进按钮瞬间变为禁用状态且快速滑动收起消失，用户也没有机会去点击。这样一来，Firefox地址栏左侧的空间在大部分情况下视觉感受轻量简洁，仅有一个最重要的后退按钮，而在需要使用前进按钮的场景下，操作也是流畅、自然的。&lt;/p&gt;

&lt;p&gt;　　这里不评判两种设计孰优孰劣，在处理前进按钮的这个问题上，Chrome和Firefox都有各自的答案。Firefox之所以采用这种较为大胆的设计，我认为和前进按钮的使用频率、使用场景有着密不可分的关系。再换个角度，Chrome也并不适用Firefox的设计：在Chrome地址栏左侧有3个按钮，如果中间的按钮有时会隐藏，那么最后一个刷新按钮的位置无法固定，在用户看来这个“工具栏”是有明显跳动存在的，而firefox的刷新按钮是在地址栏右侧，并不会有这样的问题。&lt;/p&gt;

&lt;p&gt;　　上文是一层操作的例子。那么多层操作呢？假如你面对一组信息列表，针对全部列表有一套操作，针对每条信息又都有一套新的操作时，就必须要考虑隐藏的设计了。&lt;/p&gt;

&lt;p&gt;　　Gmail的邮件列表页在未选中邮件时，工具栏只包括3个针对列表的功能。选中具体邮件后，针对该邮件的操作出现在工具栏中，原有的操作消失。这样既可以避免未选中邮件时大量禁用操作摆放在界面上给用户造成负担，又保证工具栏在默认状态下的清爽简洁。然而，这种设计也给用户带来一定的学习成本，新手用户在初次使用时需要探索一番才能明白邮件选中前后的区别。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-04/5.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;

&lt;p&gt;　　Dropbox也采用了类似的设计，在默认界面的表格标题栏中不呈现任何操作，单击选中文件后，具体操作展现在工具栏上。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-04/6.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;

&lt;p&gt;　　当我们面临不那么复杂的操作时，例如web上的发布表单、提交流程等，对禁用状态的取舍则需要更加细致入微的思考。以下是一些设计建议供参考：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.需要应引导用户操作时，扔掉禁用&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　　先来看看新浪微博的发布按钮。这个按钮仅当发布框中有文字时展示为明确可点击的红色；若发布框中没有文字，按钮显示为灰色，点击时发布框背景色变红闪烁，提示用户输入内容。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-04/8.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-04/9.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;

&lt;p&gt;　　这里设计要表达的目的很明确，既输入文字后才可以发布。然而，当发布按钮看上去呈现不可点击的灰色时，鼠标移上按钮仍然为手型，点击后系统也给出了交互上的反馈，这样一来按钮就被赋予了多重含义，在变灰时也可以点击，给用户造成了理解上的困惑。按照用户的认知，如果一个按钮看上去可点击，那么它应该实际也可点击。如果看上去不像能点的样子，那它就应该不可点。&lt;/p&gt;

&lt;p&gt;　　facebook 的状态发布按钮并没有设计禁用状态，当输入框内容为空时，点击Post按钮，页面上不会产生变化。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-04/10.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;

&lt;p&gt;　　腾讯微博的发布按钮也采用同样的设计，假如内容为空时点击按钮，在输入框的右下角会以橙色文字提示用户输入内容。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-04/11.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;

&lt;p&gt;　　对于微博或类SNS的网站，发布状态是最重要的写操作入口，按钮在界面上可以起到良好的引导作用。这种情况下，仅赋予按钮一种状态，是不是更简单、更容易理解呢？&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.明确区分禁用和可用样式&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　　如果某个操作确实需要禁用状态，那么在视觉上需要明确区分可用的样式与禁用的样式。举一个反例，在tumblr发布文字时，左下角的发布按钮很难看清什么情况下是可用，什么情况下是禁用。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-04/12.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;

&lt;p&gt;　　上图中，红色圈出的部分是禁用状态。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-04/13.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;

&lt;p&gt;　　上图为输入文字后的状态，左下角的Publish此时已经可点击了，但按钮的颜色、立体效果均没有改变，仅文字变亮，而文字的亮度和禁用状态下仅有细微的差别，在比较差的显示器上是无法分辨的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.在恰当的时候给出恰当的解释&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　　当禁用状态的变化对用户来说有些突然时，可以考虑设计清晰易懂的解释性说明。例如Bing搜索首页，当某张图片不能下载时，下载按钮置灰，当鼠标移动到按钮上时，tips解释了该按钮置灰的原因。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-04/14.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;

&lt;p&gt;　　OS X的设置窗口中，Advanced按钮默认是禁用的。在这种类似的设置窗口中，OS X使用左下角的带锁开关来控制高级的操作。对于那些关键性的系统级设置，需要开锁后才能进行更改。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-04/15.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. 赋予禁用状态更多可能性&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　　禁用状态总是会令人联想到冷冰冰的系统规则，但如果善用禁用状态，信息传达将更有效。例如在Twitter发推时，提交过程中Tweet按钮变为禁用，同时在按钮左侧出现loading动画，通过两个UI元素的组合表达了提交中这一动作。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-04/16.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;

&lt;p&gt;　　新版flickr的上传图片工具中，点击提交后，按钮立刻变为禁用状态，而有趣的文案“Hold on there，tiger”也给界面带来生动感。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-04/17.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;小结&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　　禁用状态是否始终可见，取决于它所属操作在界面中的功能属性。最重要的是保证核心功能交互体验流畅，用户不会形成理解上的困惑，然后再根据具体界面环境进行分析。如果需要展示禁用状态，我们必须让用户明白该操作变得可用的方法；如果需要隐藏禁用状态，在它出现时要让用户自然接受而不是“被吓了一跳”。更进一步，如果展示了禁用状态，那么就尽量避免样式上和可用状态的混淆，明确可点与不可点；在必要的时候给出解释和说明，不要让用户去猜测揣摩。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;原文地址:  &lt;a href=&quot;http://cdc.tencent.com/?p=7668&quot;&gt;http://cdc.tencent.com/?p=7668&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>前端的困局与突围(from 玉伯)</title>
   <link href="http://ssy.me/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2013/10/03/qianduan"/>
   <updated>2013-10-03T00:00:00+08:00</updated>
   <id>http://ssy.me/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2013/10/03/qianduan</id>
   <content type="html">&lt;h1&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/blog-assets/2013-10-03/1.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;前端的价值究竟是什么？未来应该如何发展？&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;前端的价值&lt;/h3&gt;

&lt;hr&gt;

&lt;p&gt;　如果你刚入行，或者从事专职前端工作未满 3 年，请忽略上面这个问题，并且尽量不要再往下看了。&lt;/p&gt;

&lt;p&gt;　我知道你会忍不住往下看，那就看吧。负能量有时也是正能量。真实面对所做的事，如实面对自己的真心，这是迟早的。有过痛，才真正懂得乐。&lt;/p&gt;

&lt;p&gt;　特别注意，下面说的前端，都是阿里的前端，其他公司切勿对号入座，每个公司的情况都不同。每个公司，前端的定位也会有差异。&lt;/p&gt;

&lt;p&gt;　阿里的前端，目前主要分两种：一种在 UX / UED 部门，另一种在技术部门，所做的事大同小异，都是负责界面交互层的开发。上游是 PD、交互、视觉等，下游是后端开发人员、测试等。技能主要是 HTML、CSS、JavaScript，有些前端团队比如支付宝还直接负责 Velocity 等模板层的开发。这是阿里目前前端的现状。&lt;/p&gt;

&lt;p&gt;　前端是后端数据的第一消费者，也是最贴近用户的程序员。&lt;/p&gt;

&lt;p&gt;　一切看起来很美。&lt;/p&gt;

&lt;p&gt;　前端的价值在哪呢？很多人会回答：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;实现界面交互。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;提升用户体验。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;第一点是前端的本职工作，也是前端岗位存在的原因。第二点也不多说，前端做得好，对用户体验是有益的。&lt;/p&gt;

&lt;p&gt;让人纠结的，是前端有价值，可是，这价值真的很重要吗？真的值得做为一个职业投入一辈子吗？&lt;/p&gt;

&lt;p&gt;做技术的，可能都会有类似纠结。但传统技术，纠结相对少点。比如搞数据库的，有一堆牛人榜样，搞网络、安全等等的，也是如此。这个现实的背后，是因为&lt;/p&gt;

&lt;p&gt;这批传统技术的背后，无论是数据库底层优化，还是网络优化、安全防范等等，做得好，对业务都能直接产生影响，比如大幅度降低硬件成本等等。 价值是直接的，可见的，不太会被质疑。&lt;/p&gt;

&lt;p&gt;然而前端的价值，没有人会直接否认，但看得明白的，都知道：&lt;/p&gt;

&lt;p&gt;淘宝的核心用户体验，并非是 UI 层面带来的，而是 C2C 的模式，是同等品质下商品的价格，还有支付宝的便捷等等。前端的确很重要，但真的，也就那么着。比如京东，很多交互细节做得其实不咋的，但京东靠着靠谱的物流、货到付款等方式提升了整体购物体验。对阿里来说，用户体验非常非常重要，但前端在用户体验层面能做的其实很少很少。&lt;/p&gt;

&lt;p&gt;一个事实：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;把国内大部分公司的 UX 部门解散掉，也不会太影响产品的体验。在国内，UX 主要还是起到美工的作用，虽然我不想承认。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;前端依旧是美工，而且仅仅是实现工。&lt;/p&gt;

&lt;p&gt;在阿里，我们不得不承认一个事实：&lt;strong&gt;前端的确有价值，但放在全局来看，前端产生的价值并非核心价值。&lt;/strong&gt; 在阿里，虽然前端的工作已经不可或缺，但对大公司而言，不可或缺的岗位多了去呢，不可或缺不代表有核心价值，我就不说了。&lt;/p&gt;

&lt;h3&gt;前端的未来发展&lt;/h3&gt;

&lt;hr&gt;

&lt;p&gt;前端，往后是技术，往前是体验。我的理解，前端的未来发展，有两个方向：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;前后端体系的融合，技术平台化。 范例是 Google、Facebook 等公司的技术体系，不细分前后端，都是 Web Developer，在整套技术平台上，Developer 都可以从后到前高效开发。技术平台本身由 Engineer 维护，有各个领域的高手，包括前端的。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;前端技术带来的体验革新，成为某些产品的核心竞争力。 典型的比如 Path，国外有很多创新型项目，体验是核心竞争力之一。在这类产品中， 前端带来的用户体验很关键。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;然而，上面两个方向，在阿里的现状下，困难重重：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;技术平台化之路很难。 阿里现有的技术体系，前端只是薄薄的一层，要靠这薄薄的一层，来渗透甚至改革现有前后端开发模式，非常困难。支付宝算是走在前面，已经摸索了一年多，但越来越觉得，前端的绝大部分问题，其实都需要后端才能解决。去跨团队推动也可以，因为难，所以前行也挺有挑战挺有意义。可是，更悲催的事实是，技术平台化，前后端开发模式的融合，目前来看，并不是阿里的痛点，还没有到这一步，没这个强烈需求。需求不强烈，意味着缺了“天时”。很希望我的想法是错的。前后端的技术平台化之路，还有一个很现实的问题是，马云留下的隐患：平凡的人去做非凡的事。虽然现在有意不提这句话了。这句话很伤人，特别是技术人员，然而事实就是事实。即便技术平台能建成，在平台之上，阿里现有的开发人员，无论是前端还是后端，很多人可能还欠缺了不少能力。Facebook、Google 等玩起来，有个重要因素是精英文化。这话题不多说。现实的残酷，虽然也有方法是改变。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;体验创新之路也非常难。 在淘系可能相对好点，在支付宝，前几年首要的问题是安全、稳定，接下来几年之内，依旧是安全、稳定。创新受产品形态的影响非常大，没有一个好的产品，妄谈创新。可以有不少微创新，可以有很多小而美，但目前都触不到痛点，隔靴搔痒。真正承担阿里用户体验的，是 CDN 团队、是数据库团队、是 PD、是运营、是大安全…… 继续希望我是错的。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上两个方向，虽然困难重重，但在一些新领域，却充满机会与希望：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;无线领域。 未来是属于无线的，这话说到心坎上。目前阿里的无线才起步，起步意味着百废待兴。无论是前后端的技术体系，还是产品的体验创新，在无线领域，前端的机遇与挑战都很多。并且其价值，有可能变成核心价值。这一点，希望我的判断是对的。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Node.js 领域。严格来说是 JavaScript 程序员的新舞台。通过 Node，前端程序员可以摇身一变，变成传统程序员。数据库、网络、业务架构等等技术核心领域，都可以通过 JavaScript 来达成。Node 社区是迷人的。同样，希望我的判断是对的。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上面的分类有点混乱，下面继续乱谈：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创业。 在很多产品中，前端虽然很难产生核心价值，但在有竞争的地方，附属价值经常会成为核心竞争力。比如出去创业，如何在大量同类产品中脱颖而出，前端界面层的实现非常关键。可是，无论是淘宝，还是支付宝等，目前都已经过了初期创业期。有时真希望，易趣如果还强大着该有多好。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;转行。 的确，没必要因为懂 JavaScript，就一辈子做前端。没必要限定自己的发展，可以做 2-3 年前端，然后再去做 2-3 年开发，还年轻的话，可以继续尝试各种岗位，说不定，10年后，就变 CTO 了。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;从人的一生来看，前端只是一段很小的旅途。它能带给你我们的已经不少，舍弃惯性，脱离舒适区，长远来看才能走得更远。放弃有时也是坚持，重要的是你心中的梦是什么。&lt;/p&gt;

&lt;h3&gt;感悟与坚持&lt;/h3&gt;

&lt;hr&gt;

&lt;p&gt;纯技术上，前端目前的很多发展，只是在满足业务，并没有真正对业务带来“从无到有、促进变革”的变化。从公司的角度讲，并不需要那么多前端牛人。这是我那条说 HTML 高手是屠龙术的微博的含义。&lt;/p&gt;

&lt;p&gt;另一个角度上，前端技术这些年的变化，无论是 YUI 的发展、还是最近两三年兴起来的模块化开发理念、以及 Node.js 带来的前端工具变革、还有 Backbone 等类库背后的 MVX 的发展，这些都切实推动着前端往前发展，虽然很慢很慢，虽然短时间内很难直接影响业务价值，但我相信，这类工作的价值，也很大。&lt;/p&gt;

&lt;p&gt;一类是直接促进业务发展，一类是缓慢带动人员的成长。这两类工作，都非常有价值。一个着力于现在，一个发力于未来。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;原文转自:&lt;a href=&quot;https://github.com/lifesinger/lifesinger.github.com/issues/141&quot;&gt;https://github.com/lifesinger/lifesinger.github.com/issues/141&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>如何使用markdown</title>
   <link href="http://ssy.me/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2013/10/03/markdown"/>
   <updated>2013-10-03T00:00:00+08:00</updated>
   <id>http://ssy.me/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2013/10/03/markdown</id>
   <content type="html">&lt;h1&gt;&lt;/h1&gt;

&lt;p&gt;　　本文面向不了解 markdown 或刚准备上手的同学。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;它是什么&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　　首先，什么是 markdown？我们可以直接看一下 WIKI……不过 wiki很长，让人没有耐心读下去。那么，简单来说，markdown 其实是一种轻量级的标记语言；或者说，它规定了一些文本的书写格式，就像这样：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;写上你的标题
============

开始书写正文吧

当然也可以用 *列表* 的形式：
*   列表项目
*   还是列表项目
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　上面这一段东西就是 markdown 了——它看上去和普通的文本没什么两样，只不过文字“被一些
标记 格式化”了，所以看上去会感觉比较漂亮，书面化一点形容叫做 具备更高的可读性&lt;/p&gt;

&lt;p&gt;　　这一段 markdown 给我们的直观感受是我们能够清楚地识别出其中的“标题”、“段落”以及“列表”，
对，就和我们熟知的 html 一样，用来格式化内容&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;为何使用&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　　接下来的问题自然是，我们为什么要使用 markdown？&lt;/p&gt;

&lt;p&gt;　　我们可以把这个问题进一步拆分为三个问题：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;使用 markdown 而不是 html 的好处在哪&lt;/li&gt;
&lt;li&gt;在哪些场景下使用？&lt;/li&gt;
&lt;li&gt;这个东西的普及度如何？（这意味着它的前途）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　&lt;strong&gt;接下来一一回答:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;前文已说，markdown 和 html 都是一路的标记语言，用来格式化内容。而内容之所以要显得很格式化，是因为这样我们更容易阅读和理解。被渲染后的 html 是很可读的，但是 html 代码读起来就很糟糕，因为它夹杂着大量 &amp;lt;tag&amp;gt;；而 markdown 不管是写还是读，都很舒服。有一点需要注意的是，markdown 并不是为了取代 Html，因为根本取代不了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种发布的格式，Markdown 是一种书写的格式。最后一点，markdown 可以被编译为 html，比如使用在线的 Pandoc&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;我个人认为，我们在 txt 上写的文档或随手记之类的东西，就完全可以使用 markdown，简单且美观。另外，最重要的一点，我们可以在 支持把 markdown 编译为 html 的地方书写 markdown，好处是
显而易见的：书写简单、展现美观。典型的场景有：github 仓库的 README 描述文件、github 中的issue、评论框等。总而言之，把它用在要写文档的地方，妥妥的&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;我们知道，这世界上还有很多类似于 markdown 的轻量级标记语言，比如形形色色的 wiki 语法。所以，我们凭什么使用 markdown 而不是 markup 或者 wikidown？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;答案很简单，因为它很流行。至少著名的程序员社区如 github 和 stackoverflow都提供了对它的大量支持&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　说了那么多，结论就是，学习并且使用 markdown，必须的！何况 markdown 学起来非常简单&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;语法简要介绍&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　　接下来会非常简单地介绍一下语法，而详细的语法大全可以直接去 作者的官网 查看。
作者对语法的介绍富有条理且细致入微。&lt;/p&gt;

&lt;p&gt;　　语法介绍之后会着重说一下几个比较给力的特性，这个部分是重点&lt;/p&gt;

&lt;p&gt;部分语法如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;使用一个或多个空行分隔内容段来生成段落 &amp;lt;p&amp;gt;。

标题（h1~h6）格式为使用相应个数的“#”作前缀，比如以下代码表示 h3：
### this is a level-3 header ###
使用“&amp;gt;”作为段落前缀来标识引用文字段落。这其实是 email 中标记引用文字的标准方式：

&amp;gt;   引用的内容
&amp;gt;   这个记号直接借鉴的邮件标准


使用“*”“+”“-”来表示无序列表；使用数字加“.”表示有序列表。如：
1.  I am ordered list item 1...
2.  So I should be item 2!?
使用 4 个以上 空格或 1 个以上 的 tab 来标记代码段落，它们将被
&amp;lt;pre&amp;gt; 和 &amp;lt;code&amp;gt; 包裹，这意味着代码段内的字体会是 monospace
家族的，并且特殊符号不会被转义。

使用 [test](http://example.net &amp;quot;optional title&amp;quot;) 来标记普通链接。

使用 ![img](http://example.net/img.png &amp;quot;optional title&amp;quot;) 来标记图片。

引号内的 title 文字是可选的，链接也可以使用相对路径。

使用 * 或 _ 包裹文本产生 strong 效果：

_语气很重的文本_ 以及 **语气更重的文本**
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;给力的特性&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　　普通换行并不产生新的段落或&amp;lt;br&amp;gt;，但是产生空格。&lt;/p&gt;

&lt;p&gt;　　其实这个和 html 对 line-break 换行 的处理方式是一致的。为了使文本良好地展示在视野内，
我们会选择 手动地 将文字折行，但是并不意味着这两行在逻辑上不是一个段落。&lt;/p&gt;

&lt;p&gt;　　我们也可以插入真正的手动换行符&amp;lt;br&amp;gt;，如果要问&amp;lt;br&amp;gt; 在什么时候有用，下面是一个例子：&lt;/p&gt;

&lt;p&gt;我 &lt;/p&gt;

&lt;p&gt;其实&lt;/p&gt;

&lt;p&gt;是一首&lt;/p&gt;

&lt;p&gt;诗……&lt;/p&gt;

&lt;p&gt;楼上 
这一段 
说得漂亮！
支持 setext-style 的 header 定义：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;定义 h1：

THIS IS THE MAIN TITLE
======================
定义 h2：

This is the subtitle
--------------------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　更低级别的 header 就无法使用这种方式定义了。我们不用管 setext-style 是什么意思，只需要知道
这种标记方式更能凸显文章标题&lt;/p&gt;

&lt;p&gt;　　在 blockquote（“&amp;gt;”标记的段落） 之内可以嵌套使用其他标签，甚至可以再嵌套blockquote——&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;上古神书《商古》写道：
&amp;gt;   今有一鼎，镌以奇文：
&amp;gt;   &amp;gt;   吾乃鼎，非杯具也。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　支持引用式的链接格式。什么叫做“引用式”的链接呢，举例来说，
对于本文中的一段文字，相应的 mkd 代码是：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;首先，什么是 markdown？我们可以直接看一下 [WIKI][1]……
另外，markdown 可以被编译为 html，比如使用在线的 [Pandoc][2]

    [1]:    http://en.wikipedia.org/wiki/Markdown   &amp;quot;wiki_markdown&amp;quot;

    [2]:    http://johnmacfarlane.net/pandoc/try    &amp;quot;pandoc online&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　看上去就好像是“引用文献”的格式一样。好处非常易见：&lt;/p&gt;

&lt;p&gt;　正文文本中不会出现 url 链接这种读者不关心的信息，从而不影响读者的阅读&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;结尾&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　以上便是对 markdown 的一个简要介绍了，需要了解进一步内容的，请移步&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown 项目主页&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://wordpress.org/extend/plugins/markdown-for-wordpress-and-bbpress/&quot;&gt;WordPress 的 markdown 插件&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://wowubuntu.com/markdown/&quot;&gt;中文版语法说明&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://johnmacfarlane.net/pandoc/&quot;&gt;强大的文本编译工具 Pandoc，支持 markdown 和 html 之间的互译&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 
</feed>